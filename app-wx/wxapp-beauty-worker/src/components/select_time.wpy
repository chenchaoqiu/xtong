<style lang="scss">
    .dialog-select {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        z-index: 105;
        background-color: rgba(0,0,0,.8);
        overflow: hidden;
        .picker-wrap {
            position: fixed;
            background-color: #fff;
            width: 100vw;
            bottom: 0;
            .picker-header {
                padding: 30rpx 24rpx;
                border-bottom: 1rpx solid #eee;
                .arrows-big {
                    width: 23rpx;
                    height: 40rpx;
                    vertical-align: middle;
                }
            }
            .indicator {
                height: 34px;
            }
            .picker-item {
                text-align: center;
                line-height: 34px;
            }
            .picker-hint {
                border-top: 1rpx solid #eee;
                padding: 21rpx 24rpx;
                font-size: 26rpx;
                color: #333;
            }
            .picker-footer {
                border-top: 1rpx solid #eee;
                padding: 19rpx 0 36rpx 0;
                .flex-box view {
                    -webkit-box-flex:1;
                    -webkit-flex:1;
                    flex:1;
                    margin-right: 42rpx;
                    border: 1px solid #E4E4E4;
                    color: #333;
                    text-align: center;
                    border-radius: 5px;
                    font-size: 24rpx;
                    height: 50rpx;
                    line-height: 50rpx;
                }
                .flex-box .active {
                    color: #26cad3;
                    border: 1px solid #26cad3;
                }
                .btn-wrap {
                    margin-top: 35rpx;
                    padding-right: 24rpx;
                    .btn {
                        border-radius: 5px;
                        width: 180rpx;
                        height: 70rpx;
                        color: #999;
                        /*background-color: #ddd;*/
                        border: 1px solid #dddddd;
                        text-align: center;
                        line-height: 70rpx;
                        font-size: 30rpx;
                    }
                    .btn-warn {
                        /*background-color: #E43C3F;*/
                        border: 1px solid #26cad3;
                        color: #26cad3;
                        margin-left: 30rpx;
                    }
                }
            }
        }
    }
</style>
<template>
    <block wx:if="{{isShow}}">
        <view class="dialog-select" @touchmove.stop="stop">
            <view class="picker-wrap" animation="{{animationData}}">
                <view class="picker-header clearfix">
                    <view class="pull-left size-30 " style="padding-top:6rpx;color: #26cad3">预约到店时间</view>
                    <!--<view class="pull-right" @tap="isOk"><image class="arrows-big" src="../../images/icon-select-shop.png"/></view>-->
                </view>
                <picker-view indicator-class="indicator" style="width: 100%; height: 180px;" value="{{value}}" bindchange="bindChange">
                    <picker-view-column style="flex:1.6;">
                        <view wx:for="{{dates}}" wx:key="{{index}}" class="picker-item">{{item}}</view>
                    </picker-view-column>
                    <picker-view-column>
                        <view wx:for="{{hours}}" wx:key="{{index}}" class="picker-item" style="padding: 0; text-align: center">{{item}}</view>
                    </picker-view-column>
                    <picker-view-column>
                        <view wx:for="{{seconds}}" wx:key="{{index}}" class="picker-item">{{item}}</view>
                    </picker-view-column>
                </picker-view>
                <view class="picker-hint">
                    请选择服务时长 <text class="color-66">(我们会根据您的时间合理安排您的时长)</text>
                </view>
                <view class="picker-footer">
                    <view class="flex-box" style="border-bottom: 1rpx solid #eee;padding-bottom: 18rpx;">
                        <view style="margin-left: 24rpx;" @tap="selectTime(1)" class="{{duration == 1 ? 'active' : ''}}">1小时</view>
                        <view @tap="selectTime(2)" class="{{duration == 2 ? 'active' : ''}}">2小时</view>
                        <view @tap="selectTime(3)" class="{{duration == 3 ? 'active' : ''}}">3小时</view>
                        <view @tap="selectTime(0)" class="{{duration == 0 ? 'active' : ''}}">无要求</view>
                    </view>
                    <view class="clearfix btn-wrap">
                        <view @tap="confirm" class="pull-right btn btn-warn">确定</view>
                        <view @tap="clear" class="pull-right btn">取消</view>
                    </view>
                </view>
            </view>
        </view>
    </block>
</template>
<script>
	import wepy from 'wepy'
	import {dateFormat} from '../utils/util'
    import api from '../api/api'

	const date = new Date();
	const dates = [];
	const hours = [];
	const seconds = [];
	const bookBeginTime = [];

	let d = new Date(new Date(date.getFullYear()+'/'+date.getMonth()+2+'/'+1)- 1000*3600*24).getDate();

	for (let i = 0; i < 14; i++) {
		if (i==0) {
			dates.push("今天");
			bookBeginTime.push(dateFormat(new Date(), 'YYYY-MM-DD'));
		} else {
			let m = (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1) >= 10 ? (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1) : "0" + (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1);
			let d = (new Date(date.getTime() + 1000*3600*24*i).getDate()) >= 10 ? (new Date(date.getTime() + 1000*3600*24*i).getDate()) : "0" + (new Date(date.getTime() + 1000*3600*24*i).getDate());
			let y = new Date(date.getTime() + 1000*3600*24*i).getFullYear();
			dates.push( y+ '年' + m +'月'+ d +'日');
			bookBeginTime.push(y + '-' + m +'-'+ d);
		}
	}

	/*for (let i = 1 ; i <= 24; i++) {
		hours.push(i);
	}

	for (let i = 0 ; i <=5; i++) {
		seconds.push(i*10 == 0 ? '00' : i*10);
	}*/

	export default class SelectTime extends wepy.component {
		data = {
			dates,
			hours,
			seconds,
			bookBeginTime,
			value: [0, 0, 0],
			duration: 0,
            indexArr: [0,0,0],
            dateArr:[],
//            memberId:'',
		}

		props = {
			isShow: Boolean,
            memberId: String,

		}
		onLoad() {

		}
        events = {
            'menId': (id) => {
                this.memberId = id;
                this.getArriveTimeList();
            },

        };
		methods = {
			stop() {
				return false;
            },
			selectTime(num) {
				this.duration = num;
			},
			bindChange(e) {
				let val = e.detail.value;
				let arr = [];
				this.index = val[2];
				this.indexArr = val;
				if (this.index != val[2]) {
					return
				}
				for (let i = 0; i < this.dateArr.length; i++) {
					let dates = this.dateArr[i].range.split('-');
					arr.push(dates[0]);
				}

				if (arr.indexOf(arr[val[1]]) > -1) {
					arr.splice(0,arr.indexOf(arr[val[1]])+1);
				}

				if (arr.length > 0) {
					this.seconds = arr;
				} else {
					this.seconds = [];
					this.seconds[0] = this.dateArr[this.dateArr.length - 1].range.split('-')[1];
				}
				this.$apply();
			},
			clear() {
//                console.log(this.memberId);
				this.$emit("hide");
            },
            confirm() {
	            this.$emit("confirm",this.duration,this.bookBeginTime[this.indexArr[0]], this.hours[this.indexArr[1]]+':00',this.seconds[this.indexArr[2]]+':59');
            }

		}
		async getArriveTimeList() {
			const {data} = await api.getArriveTimeList({
                query: {
                    memberId:this.memberId,
                }
            });
			for (let i = 0; i < data.list.length; i++) {
				let dates = data.list[i].range.split('-');
				this.hours.push(dates[0]);
				if (i > 0) {
					this.seconds.push(dates[0]);
				}
			}
			this.dateArr = data.list;
			this.$apply();
		}

	}
</script>
