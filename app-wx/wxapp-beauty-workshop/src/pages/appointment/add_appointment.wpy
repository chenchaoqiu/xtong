<style lang="scss">
    ::-webkit-scrollbar{
        display: none;
        width:0px;
    }
    .header {
        border-top:1rpx solid #E1E1E1;
        background-color: #fff;
        /* height: 173rpx;*/
        padding: 50rpx 24rpx;
        .logo-wrap {
            padding-right: 30rpx;
            .logo {
                width: 110rpx;
                height: 110rpx;
                display: block;
            }
        }
    }
    .main {
        .picker-wrap {
            background-color: #fff;
            margin-top: 20rpx;
            width: 100vw;
            .picker-header {
                padding: 30rpx 24rpx;
                border-bottom: 1rpx solid #eee;
                .arrows-big {
                    width: 23rpx;
                    height: 40rpx;
                    vertical-align: middle;
                }
            }
            .indicator {
                height: 34px;
            }
            .picker-item {
                text-align: center;
                line-height: 34px;
            }
            .picker-hint {
                border-top: 1rpx solid #eee;
                padding: 21rpx 24rpx;
                font-size: 26rpx;
                color: #333;
            }
            .picker-footer {
                border-top: 1rpx solid #eee;
                padding: 19rpx 0 36rpx 24rpx;
                .flex-box button {
                    -webkit-box-flex:1;
                    -webkit-flex:1;
                    flex:1;
                    margin-right: 42rpx;
                    border: 1px solid #E4E4E4;
                    background-color:#fff;
                    color: #333;
                    text-align: center;
                    border-radius: 5px;
                    padding: 0 !important;
                    font-size: 24rpx;
                    height: 50rpx;
                    line-height: 50rpx;
                    box-sizing:content-box;
                    &:after {
                        border: none;
                    }
                }
                .flex-box .active {
                    color: #26cad3;
                    border: 1px solid #26cad3;
                }
                .btn-wrap {
                    margin-top: 55rpx;
                    padding-right: 24rpx;
                    .btn {
                        border-radius: 5px;
                        width: 180rpx;
                        height: 70rpx;
                        color: #fff;
                        background-color: #ddd;
                        text-align: center;
                        line-height: 70rpx;
                        font-size: 30rpx;
                    }
                    .btn-warn {
                        background-color: #E43C3F;
                        margin-left: 30rpx;
                    }
                }
            }
        }
    }
    .header-title {
        font-size: 34rpx;
        margin-bottom: 8rpx;
    }
    .label {
        font-size: 30rpx;
    }
    .sp-ml-25 {
        margin-left: 25rpx;
    }

    .border {
        border-top: 1px solid #ddd;
        margin-top: 20rpx;
    }
    .flex-box {
        align-items: center;
    }
    .weui-media-box {
        padding: 0;
    }
    .footer {
        position: fixed;
        padding: 0 24rpx;
        box-sizing: border-box;
        z-index: 101;
        width: 100%;
        height: 90rpx;
        line-height: 90rpx;
        bottom: 0;
        background-color: #26CAD3;
        text-align: center;
        color: #fff;
        font-size: 40rpx;
    }
    .color-g {
        color: #27CAD3;
    }
    .form-wrap {
        position: relative;
        display: block;
        width: 100%;
    }
    .btn-sub {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        opacity: 0;
    }
    .footer {
        padding: 0;
        button {
            width: 100vw;
            height: 100%;
            background-color: #27CAD3;
            border: none;
            color: #fff;
            &:after {
                border: none;
            }
        }
    }
</style>
<template>
    <view class="container">
        <form class="form-wrap" bindsubmit="formSubmit" report-submit="true" @submit="toPage">
            <view class="weui-cell header">
                <view class="weui-cell__hd">
                    <view class="logo-wrap">
                        <image class="logo" src="{{address[5]}}"/>
                    </view>
                </view>
                <view class="weui-cell__bd">
                    <view class="header-title color-33 font-30 ellipsis-1">{{address[3]}}</view>
                    <view class="size-26 color-99 ellipsis-1">
                        {{address[0]}}
                        <!--<view class="logo-wrap">
                            <image class="logo" src="../../images/store.png"/>
                        </view>
                        <view class="flex-right size-24 color-99 ellipsis-1">
                            {{address[0]}}
                        </view>-->
                    </view>
                </view>
                <view class="weui-cell__ft">
                    <image class="arrows-big" src="../../images/arrows_c.png"/>
                </view>
            </view>
            <button class="btn-sub" form-type="submit"></button>
        </form>
        <view class="main">
            <view class="picker-wrap" animation="{{animationData}}">
                <view class="picker-header clearfix">
                    <view class="pull-left size-30" style="padding-top:6rpx; color: #26cad3">预约到店时间</view>
                </view>
                <picker-view indicator-class="indicator" style="width: 100%; height: 180px;" value="{{value}}" bindchange="bindChange">
                    <picker-view-column style="flex:1.6;">
                        <view wx:for="{{dates}}" wx:key="{{index}}" class="picker-item {{index == indexArr[0] ? 'color-g' : ''}}">{{item}}</view>
                    </picker-view-column>
                    <picker-view-column>
                        <view wx:for="{{hours}}" wx:key="{{index}}" class="picker-item {{index == indexArr[1] ? 'color-g' : ''}}" style="padding: 0; text-align: center">{{item}}</view>
                    </picker-view-column>
                    <!--<picker-view-column>
                        <view wx:for="{{seconds}}" wx:key="{{index}}" class="picker-item">{{item}}</view>
                    </picker-view-column>-->
                </picker-view>
                <!--<view class="picker-hint">
                    请选择服务时长 <text class="color-66">(我们会根据您的时间合理安排您的时长)</text>
                </view>
                <view class="picker-footer">
                    <form bindsubmit="formSubmit" report-submit="true" @submit="collectFormIds">
                        <view class="flex-box">
                            <button form-type="submit" @tap="selectTime(1)" class="{{duration == 1 ? 'active' : ''}}">1小时</button>
                            <button form-type="submit" @tap="selectTime(2)" class="{{duration == 2 ? 'active' : ''}}">2小时</button>
                            <button form-type="submit" @tap="selectTime(3)" class="{{duration == 3 ? 'active' : ''}}">3小时</button>
                            <button form-type="submit" @tap="selectTime(0)" class="{{duration == 0 ? 'active' : ''}}">无要求</button>
                        </view>
                    </form>
                </view>-->
            </view>
        </view>
        <view class="footer" @tap="addAppointment">
            <form bindsubmit="formSubmit" report-submit="true" @submit="collectFormIds">
                <button form-type="submit">立即预约</button>
            </form>
        </view>
    </view>
    <dialog></dialog>
</template>
<script>
	import wepy from 'wepy'
	import api from '../../api/api'
	import {dateFormat} from '../../utils/util'
	import dialog from '../../components/dialog'

	const date = new Date();
	const dates = [];
	const hours = [];
	const seconds = [];
	const bookBeginTime = [];

	let d = new Date(new Date(date.getFullYear()+'/'+date.getMonth()+2+'/'+1)- 1000*3600*24).getDate();

	for (let i = 0; i < 14; i++) {
		hours.push(((9+i)<10?'0'+(9+i):(9+i))+':'+'00');
		hours.push(((9+i)<10?'0'+(9+i):(9+i))+':'+'15');
		hours.push(((9+i)<10?'0'+(9+i):(9+i))+':'+'30');
		hours.push(((9+i)<10?'0'+(9+i):(9+i))+':'+'45');
		if (i==0) {
			dates.push("今天");
			bookBeginTime.push(dateFormat(new Date(), 'YYYY-MM-DD'));
		} else {
			let m = (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1) >= 10 ? (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1) : "0" + (new Date(date.getTime() + 1000*3600*24*i).getMonth() +1);
			let d = (new Date(date.getTime() + 1000*3600*24*i).getDate()) >= 10 ? (new Date(date.getTime() + 1000*3600*24*i).getDate()) : "0" + (new Date(date.getTime() + 1000*3600*24*i).getDate());
			let y = new Date(date.getTime() + 1000*3600*24*i).getFullYear();
			dates.push( y+ '年' + m +'月'+ d +'日');
			bookBeginTime.push(y + '-' + m +'-'+ d);
		}
	}

	export default class AddAppointment extends wepy.page {
		config = {
			navigationBarTitleText: '新增预约',
			backgroundColor: '#ebf0ef'
		};
		components = {
			dialog
		}
		onLoad(options) {
			let that = this;
            this.stutas = options.stutas;
            let shopInfo =  wx.getStorageSync('shop');
            if (shopInfo) {
	            this.address = [shopInfo.address,'',shopInfo.shopId,shopInfo.shopName,shopInfo.phone,shopInfo.shopLogo];
            } else {
	            wx.getLocation({
		            type: 'gcj02',
		            success: function(res) {
			            var latitude = res.latitude;
			            var longitude = res.longitude;
			            that.getposi({lo:longitude,la:latitude});
		            }
	            });
            }

            if (!options.stutas) {
	            wx.setStorageSync('posi',"");
            }

		}

		onShareAppMessage(res){
			if (res.from === 'button') {
				// 来自页面内转发按钮
//        console.log(res.target)
			} else {
				return {
					title: '亲爱的 推荐你一个女生必备的小程序 要关注哦！',
					path: '/pages/appointment/add_appointment?shareMemberCompanyId='+wx.getStorageSync('session').memberCompanyId,
					imageUrl: this.imageUrl + 'share_img.png'
				}
			}
		}

		onShow() {
			this.address = wx.getStorageSync('posi') || this.address;
			this.$apply();
		}
		onRoute() {
			this.$parent.submitFormIds();
        }
		data = {
			dates,
			hours,
			seconds,
			bookBeginTime,
			isShow: false,
			value: [0, 0, 0],
			constellation: '',
			duration: 0,
			address:['点击选择门店','','','请选择门店',''],
			indexArr: [0, 0, 0],
			index: 0,
			dateArr: [],
			stutas: false,
			imageUrl: wepy.$appConfig.imageUrl
		};

		watch = {
			/*num (curVal, oldVal) {
				console.log(`旧值：${oldVal}，新值：${curVal}`)
			}*/
		};
		methods = {
			toPage(e) {
                /*this.collectFormIds(e.detail.formId);*/
				this.$parent.submitFormIds(e.detail.formId);
                this.$navigate('/pages/shop/shop');
			},
			collectFormIds(e) {
				/*this.collectFormIds(e.detail.formId);*/
				this.$parent.submitFormIds(e.detail.formId);
            },
			call() {
				wx.makePhoneCall({
					phoneNumber: this.res.shopTelephone
				})
			},
			selectTime(num) {
				this.duration = num;
			},
			bindChange(e) {
				let val = e.detail.value;
				/*let arr = [];*/
				/*this.index = val[2];*/
				this.indexArr = val;
				/*if (this.index != val[2]) {
					return
                }
				for (let i = 0; i < this.dateArr.length; i++) {
					let dates = this.dateArr[i].range.split('-');
					arr.push(dates[0]);
				}

				if (arr.indexOf(arr[val[1]]) > -1) {
					arr.splice(0,arr.indexOf(arr[val[1]])+1);
                }

                if (arr.length > 0) {
	                this.seconds = arr;
                } else {
	                this.seconds = [];
	                this.seconds[0] = this.dateArr[this.dateArr.length - 1].range.split('-')[1];
                }*/
				this.$apply();
			},
			addAppointment() {
				if (this.address[0]!="点击选择门店") {
					this.addAppointment();
				} else {
					wx.showToast({
						title: '请先选择门店',
						icon : 'none',
						duration : 1500
					});
				}

			}
		};
		async addAppointment() {
			const {imei_error_code} = await api.addAppointment({
				query:{
					memberId: wx.getStorageSync('session').memberId,
					shopId: this.address[2],//门店ID
					serviceDuration: this.duration, //时长
					bookBeginTime: this.bookBeginTime[this.indexArr[0]]+ ' ' + this.hours[this.indexArr[1]]+':00',//开始时间  (2018-01-27 09:15:00)
					bookEndTime: this.bookBeginTime[this.indexArr[0]]+ ' ' + this.hours[this.indexArr[1]]+':59'//开始时间
				}
			});
			if (imei_error_code == 0) {
				wx.setStorageSync("isLoadMyA", true);
				wx.showToast({
					title: "预约成功",
					icon : 'none',
					duration : 1500
				});
				setTimeout(function () {
					wx.navigateBack({
						delta: 1
					})
				},1000)
			}
		}
		collectFormIds(id) {
			this.$parent.globalData.formIdList.push(id);
        }
		async getArriveTimeList() {
			/*const {data} = await api.getArriveTimeList();
			for (let i = 0; i < data.list.length; i++) {
				let dates = data.list[i].range.split('-');
				this.hours.push(dates[0]);
				if (i > 0) {
					this.seconds.push(dates[0]);
                }
			}
			this.dateArr = data.list;*/

			this.$apply();
		}
		async getposi(e){
			/*获取门店*/
			if (this.stutas) {
				return
			}
			const {data} = await api.tabShop({
				query: {
					longitude:e.lo,
					latitude:e.la,
				}
			});

			let oftenGoToShop = data.oftenGoToShop;

			if (oftenGoToShop.length) {
				this.address = [oftenGoToShop[0].address,oftenGoToShop[0].description,oftenGoToShop[0].shopId,oftenGoToShop[0].shopName,oftenGoToShop[0].telephone,oftenGoToShop[0].shopLogo];
				this.$apply();
			}
		}
	}
</script>
