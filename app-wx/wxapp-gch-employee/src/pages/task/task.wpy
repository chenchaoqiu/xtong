<style lang="less">
    page {
        height: 100%;
    }
    .main-container {
        display: flex;
        flex-direction: column;
        height: 100%;
    }
    .view-body {
        flex: 1;
        max-height: 100%;
        overflow: auto;
        -webkit-overflow-scrolling:touch;
    }
    .view-footer {
        height: 90rpx;
        transition: all 0.2s;
        .message-wrap {
            width: 100%;
            padding: 15rpx 0;
            .input-wrap {
                padding-left: 30rpx;
            }
            .mgs-icon {
                width: 56rpx;
                height: 56rpx;
            }
            .icon-wrap {
                width: 136rpx;
                text-align: center;
                /*font-size: 0;*/
            }
            .message {
                height: 60rpx;
                width: 100%;
                border-radius: 3px;
                background-color: #fff;
            }
        }

    }
    .module-wrap {
        background-color: #fff;
        margin-bottom: 20rpx;
        .title {
            font-size: 32rpx;
            color: #333;
            padding: 30rpx;
        }
        .module-content {
            padding: 28rpx 40rpx;
            font-size: 30rpx;
            >.row+.row {
                margin-top: 18rpx;
            }
            .row {
                text {
                    padding-left: 10rpx;
                }
                .info {
                    margin-left: 20rpx;
                    padding-left: 18rpx;
                    border-left: 1rpx solid #A9A9A9;
                }
            }
        }
    }
    .module-plan {
        border-top: 1rpx solid #ddd;
        .title {
            border-bottom: 1rpx solid #F8F8F8;
        }
    }
    .module-day {
        padding-bottom: 30rpx;
        .module-content {
            padding: 0 30rpx;
            .task-list {
                background-color: #f8f8f8;
                .weui-cell {
                    align-items: flex-start;
                    padding: 30rpx 0 0 20rpx;
                    &:after {
                        height: 0;
                        display: none;
                    }
                    &:before {
                        height: 0;
                        display: none;
                    }
                    .weui-cell__bd {
                        padding-bottom: 30rpx;
                        border-bottom: 1rpx solid #ddd;
                        .row+.row {
                            margin-top: 2rpx;
                        }
                    }
                    .follow {
                        padding-right: 20rpx;
                    }
                }
                .rate {
                    padding-right: 20rpx;
                }
                .arrows {
                    margin-top: -2rpx;
                }
                .icon-circle,.icon-success {
                    width: 36rpx;
                    height: 36rpx;
                    display: block;
                    margin-top: 10rpx;
                }
            }
            /*.task-list+.task-list {

            }*/
        }
    }
    .module-interchange {
        .module-content {
            .msg-item+.msg-item {
                border-top: 1rpx solid #ddd;
                padding-top: 30rpx;
            }
            .msg-item {
                padding-bottom: 20rpx;
            }
            padding: 0 30rpx;
            .user-logo {
                width: 100rpx;
                height: 100rpx;
                border-radius: 100%;
                display: block;
            }
            .msg {
                padding-left: 130rpx;
            }
        }
        margin-bottom: 0;
    }

    .icon {
        width: 32rpx;
        height: 32rpx;
        display: block;
    }
    .icon-cell {
        width: 48rpx;
    }
    .send {
        width: 86rpx;
        height: 56rpx;
        background-color: #3096F8;
        color: #fff;
        font-size: 28rpx;
        line-height: 56rpx;
       display: inline-block;
    }
</style>
<template>
    <view class="main-container">
        <view id="body" class="view-body">
            <scroll-view scroll-y style="height: {{height}}px" scroll-with-animation="{{true}}" bindscrolltolower="lower">
                <view class="module-wrap module-plan">
                    <view class="title flex-box">
                        <view class="icon-cell">
                            <image class="icon" src="../../images/task.png"></image>
                        </view>
                        <view class="flex-1">任务计划</view>
                    </view>
                    <view class="module-content">
                        <view class="row">时间：<text>{{list.visitBeginTime2}}</text></view>
                        <view class="row">来访人：<text>{{list.name}}</text></view>
                        <view class="row ellipsis-1">任务：<text>{{list.visitContent}}</text></view>
                        <view class="row">创建人 <text class="info color-66">{{list.createEmployeeName}}</text> </view>
                    </view>
                </view>

                <view class="module-wrap module-day">
                    <view class="title flex-box">
                        <view class="icon-cell">
                            <image class="icon" src="../../images/day_task.png"></image>
                        </view>
                        <view class="flex-1">日程任务</view>
                    </view>
                    <view class="module-content">
                        <checkbox-group class="task-list" bindchange="checkboxChange">
                            <view wx:for="{{list.sonPlans}}" wx:key="{{item.planSonId}}" class="weui-cell label-no-pd">
                                <label @tap="checked({{item.planSonExecutorId}})">
                                    <checkbox class="weui-check" disabled="{{item.isForbid}}" value="{{item.planSonExecutorId}}" checked="{{item.status}}"/>

                                    <view class="weui-cell__hd chekcbox-icon weui-check__hd_in-checkbox">
                                        <block wx:if="{{item.isForbid}}">
                                            <image class="icon-circle" src="../../images/on_click.png"></image>
                                        </block>
                                        <block wx:else>
                                            <image class="icon-circle"  wx:if="{{!item.status}}" src="../../images/circle.png"></image>
                                            <image class="icon-success" wx:if="{{item.status}}" src="../../images/success.png"></image>
                                        </block>
                                    </view>
                                </label>
                                <view class="weui-cell__bd color-66 size-28 {{index}}"  style="padding-left: 8rpx; {{index==0  ? 'border: none' : ''}}">
                                    <view class="row ellipsis-1 color-33">任务：<text class="color-33">{{item.executeContent}}</text></view>
                                    <view class="row">时间：<text>{{item.shortBeginTime}} - {{item.shortEndTime}}</text></view>
                                    <view class="row ellipsis-1">地点：<text>{{item.place}}</text></view>
                                    <navigator class="row flex-box follow" url="/pages/task/executor?id={{item.planSonId}}&time={{list.visitBeginTime2}}&content={{list.visitContent}}&name={{list.name}}&employeeName={{item.employeeName}}">
                                        <view class="color-orange">跟进人：</view>
                                        <view class="flex-1 color-orange sp-pl-10">{{item.employeeName}}</view>
                                        <view>
                                            <text class="rate">{{item.finishExecutorNum}}/{{item.executorNum }}完成</text> <image class="arrows" src="../../images/arrows.png"/>
                                        </view>
                                    </navigator>
                                </view>
                            </view>
                        </checkbox-group>
                    </view>
                </view>

                <view class="module-wrap module-interchange">
                    <view class="title flex-box">
                        <view class="icon-cell">
                            <image class="icon" src="../../images/interchange.png"></image>
                        </view>
                        <view class="flex-1">沟通记录</view>
                    </view>
                    <view class="module-content">
                        <view class="msg-item" wx:for="{{communiList}}" wx:key="{{index}}">
                            <view class="flex-box">
                                <view>
                                    <image class="user-logo" src="{{item.headImgUrl}}"></image>
                                </view>
                                <view class="flex-1" style="padding-left: 30rpx">
                                    <view class="row">{{item.employeeName}} <text class="info color-66">{{item.departmentName}}</text></view>
                                </view>
                                <view class="color-66 text-right">{{item.addTime}}</view>
                            </view>
                            <view class="msg color-33">{{item.content}}</view>
                        </view>
                    </view>
                    <view wx:if="{{communiList.length == totalSize}}" class="text-center color-99 size-28" style="padding-bottom: 24rpx">没有更多沟通记录</view>
                </view>
            </scroll-view>
        </view>
        <view class="view-footer" style="height: {{keyCodeH}}rpx">
            <view class="message-wrap table">
                <view class="cell input-wrap" style="box-sizing: content-box">
                    <input adjust-position="{{false}}" @input="setVal" value="{{content}}" @blur="resSet" @focus="setHeight" class="message size-28" type="text" />
                </view>
                <view class="cell icon-wrap" @tap="add">
                   <!-- <image class="mgs-icon" src="../../images/mgs_logo.png"></image>-->
                    <view class="send">发送</view>
                </view>

            </view>
        </view>
    </view>
</template>
<script>
	import wepy from 'wepy'
	import api from '../../api/api'
	import {dateFormat} from  '../../utils/util'

	export default class Task extends wepy.page {
		config = {
			navigationBarTitleText: '任务',
			backgroundColor: '#F2F2F4',
			disableScroll: true
		};

		onLoad(o) {
			this.memberId = o.memberId;
			this.planId = o.planId;
			this.beginTimeString = o.date;
			this.scheduleList({beginTimeString: o.date,planId:o.planId});
			this.getPageList();
		}

		onReady() {
			let query = wepy.createSelectorQuery();
			query.select('#body').boundingClientRect().exec((res) => {
				this.height = res[0].height;
				this.$apply();
			});
		}

		data = {
			checkboxItems: [],
			keyCodeH: 90,
			list:[],
			content: '',
			communiList: [],
			pageNo: 1,
			totalSize: 1,
			memberId: '',
			planId: '',
			lastLength: 0,
			height: 558,
			beginTimeString: ''
		};

		watch = {
			/*num (curVal, oldVal) {
				console.log(`旧值：${oldVal}，新值：${curVal}`)
			}*/
		};

		methods = {
			checkboxChange(e) {
				var checkboxItems = this.list.sonPlans, values = e.detail.value;
				for (var i = 0, lenI = checkboxItems.length; i < lenI; ++i) {
					checkboxItems[i].status = 0;

					for (var j = 0, lenJ = values.length; j < lenJ; ++j) {
						if(checkboxItems[i].planSonExecutorId == values[j]){
							checkboxItems[i].status = 1;
							break;
						}
					}
				}

				this.checkboxItems = values;
			},
			setHeight(e) {
				this.keyCodeH = e.detail.height*2 + 90;
			},
			resSet() {
				this.keyCodeH = 90;
			},
			setVal(e) {
				this.content = e.detail.value;
			},
			add() {
				this.addCommuniLog();
			},
			lower() {
				if (this.communiList.length == this.totalSize) {
					return
				}
				this.pageNo = this.pageNo + 1;
				this.getPageList();
			},
			checked(id,e) {
                this.finishExecutor(id);
            }
		};

		async getPageList() {
			let {data:{list,totalSize}} = await api.getPageList({
				query:{
					memberId: this.memberId,
					pageNo: this.pageNo,
					pageSize: 10,
					planId: this.planId
				}
			});

			for (let v of list) {
				v.addTime = v.addTime.replace(/-/g,'.').substring(0,v.addTime.length-3);
			}

			this.totalSize = totalSize;
			this.lastLength = list.length;
			this.communiList = [...this.communiList,...list];
			this.$apply();
		}

		async addCommuniLog() {
			if (!this.content) {

				return
			}
			let {imei_error_code} = await api.addCommuniLog({
				query:{
					memberId: this.memberId,
					content: this.content,
					planId: this.planId
				}
			});

			if (imei_error_code == 0) {
				this.content = '';
				this.$apply();
				this.communiList.length = this.communiList.length - this.lastLength;
				this.getPageList();
				/*this.getPageList();*/
			}
		}

		async finishExecutor(id) {
			let {imei_error_code} = await api.finishExecutor({
				query:{
					planSonExecutorId: id,
				}
			});

			if (imei_error_code == 0) {
				this.scheduleList({beginTimeString: this.beginTimeString,planId:this.planId});
            }
        }

		async scheduleList(query={}) {
			let {data} = await api.scheduleList({query});

			this.list = data[0];
			this.$apply();
		}
	}
</script>
